#문제
#세 개의 장대가 있고 첫 번째 장대에는 반경이 서로 다른 n개의 원판이 쌓여 있다. 각 원판은 반경이 큰 순서대로 쌓여있다.
#1.한 번에 한 개의 원판만을 다른 탑으로 옮길 수 있다.
#2.쌓아 놓은 원판은 항상 위의 것이 아래의 것보다 작아야 한다.
#이 작업을 수행하는데 필요한 이동 순서를 출력하는 프로그램을 작성하라. 단, 이동 횟수는 최소가 되어야 한다.
#입력
#첫째 줄에 첫 번째 장대에 쌓인 원판의 개수 N (1 ≤ N ≤ 20)이 주어진다.
#첫째 줄에 옮긴 횟수 K를 출력한다.
#두 번째 줄부터 수행 과정을 출력한다. 두 번째 줄부터 K개의 줄에 걸쳐 두 정수 A B를 빈칸을 사이에 두고 출력하는데, 이는 A번째 탑의 가장 위에 있는 원판을 B번째 탑의 가장 위로 옮긴다는 뜻이다.


def hanoi(N, start, end):   # N(원판 개수) start(첫번째 장대) end(마지막 장대)
    if N == 1:              # 원판 한 개일때, 한번에 목적지로 옮긴다. (그림상 1 -> 3)
        print(start, end)
        return
    
    else:
        hanoi(N-1, start, 6-start-end) # 맨 마지막 원판을 제외한 나머지 원판은 첫번째 장대에서 가운데 장대으로 옮긴다. N-1(마지막 원판 제외한 위의 원판들), 6(3개의 원판+3개의 장대)-1번 장대-3번 장대
        print(start, end)              # 마지막 원판을 3번 장대로 옮긴다.
        hanoi(N-1, 6-start-end, end)   # 가운데 있던 N-1개의 원판을 3번 장대로 옮긴다.
        
N = int(input())
print(2**N-1)
hanoi(N, 1, 3)

