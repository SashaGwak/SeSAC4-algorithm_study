#11057 오르막 수

# N자리 오르막 수
N = int(input())

# dp는 2차원배열 (n*10)
dp = [[0] * 10 for _ in range(N+1)]

# 자리수 별로 오르막 수의 개수 구하기
# 인덱스: [N자리수][마지막수가 0~9인 오르막 수의 개수]

# 처음에는 자리수별로 오르막 수의 개수가 1개니까 1로 초기화 - [1,1,...,1]
dp[1]=[1]*10


# 규칙
# N자리이고, 마지막수가 M인 오르막 수의 개수는  - (N,M)
# N-1자리이고, 마지막수가 M보다 같거나 작은 오르막 수들의 개수일 것이다 - (N-1,M),(N-1,M-1),(N-1,M-2...),...,(N-1,0)
# ex) 2자리, 마지막수가 5(2,5)인 오르막 수의 개수는 55(1,5),45(1,4),35(1,3),25(1,2),15(1,1),05(1,0)로 6개이다. 
# (N,M) = (N-1,M) + (N-1,M-1)...+ (N-1,0)
# (N,M) = (N-1,M) + (N,M-1)

for i in range(2,N+1):
    dp[i][0] = 1    # N자리 0으로 끝나는 오르막 수는 0000과 같은 수 1개뿐
    for j in range(10):
        dp[i][j] = dp[i-1][j] + dp[i][j-1]  # memoization



# 오르막 수 총합
print(sum(dp[N]) %10007)